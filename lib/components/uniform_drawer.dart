import 'package:flutter/material.dart';

import 'package:get/get.dart';

import '../constants/constants.dart';
import '../views/bug_report.dart';
import '../views/core_pages/domain_checking.dart';
import '../views/core_pages/file_report_checker.dart';
import '../views/core_pages/file_upload.dart';
import '../views/core_pages/ip_address_check.dart';
import '../views/core_pages/large_file_upload.dart';
import '../views/core_pages/scan_url.dart';
import '../views/feedback_page.dart';
import '../views/purchase_premium.dart';
import '../views/settings.dart';
import '../views/supporting/in_app_web_view.dart';
import '../views/supporting/url_shortener.dart';
import 'alert_dialog/log_out_alert.dart';

class UniformDrawer extends StatelessWidget {
  const UniformDrawer({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return Drawer(
      child: ListView(
        padding: EdgeInsets.zero, //removes padding from ListView
        children: [
          UserAccountsDrawerHeader(
            decoration: BoxDecoration(color: Color.fromARGB(255, 88, 33, 240)),
            accountName: Text(usernameAllTime),
            accountEmail: Text(emailAllTime),
            currentAccountPicture: Container(
              width: 50,
              height: 50,
              padding: EdgeInsets.all(10),
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(50),
              color:Colors.white,
              boxShadow: [
                BoxShadow(color: Color.fromARGB(255, 3, 2, 85),offset: Offset(10, 7),blurRadius: 5.0)
              ]
            ),
              child: Image.asset(
                'assets/icons/drawer_icon.png',
                
              ),
            ),
          ),
          
          ListTile(
            title: const Text("Upload File"),
            onTap: () {
              Get.to(const FileUpload());
            },
          ),
          ListTile(
            title: const Text("Upload Large File"),
            onTap: () {
              Get.to(const LargeFileUpload());
            },
          ),
          ListTile(
            title: const Text("Get File Report"),
            onTap: () {
              Get.to(const FileReport());
            },
          ),
          ListTile(
            title: const Text("Scan URL"),
            onTap: () {
              Get.to(const ScanURL());
            },
          ),
          ListTile(
            title: const Text("Scan IP Address"),
            onTap: () {
              Get.to(const IpAddressChecking());
            },
          ),
          ListTile(
            title: const Text("Scan Domain"),
            onTap: () {
              Get.to(const DomainChecking());
            },
          ),
          ListTile(
            title: const Text("URL Shortener"),
            onTap: () {
              Get.to(const UrlShortener());
            },
          ),
          ListTile(
            title: const Text("Private Browser"),
            onTap: () {
              Get.to(InAppWebViewWidget());
            },
          ),
          ListTile(
            title: const Text("Feedback"),
            onTap: () {
              Get.to(const FeedbackPage());
            },
          ),
          ListTile(
            title: const Text("Report Bug"),
            onTap: () {
              Get.to(const BugReport());
            },
          ),
          ListTile(
            title: const Text("Settings"),
            onTap: () {
              Get.to(AppSettings());
            },
          ),
          ListTile(
            title: const Text(
              "Upgrade To Premium",
              style: TextStyle(fontWeight: FontWeight.bold),
            ),
            trailing: Icon(
              Icons.star,
              color: Colors.amber,
              shadows: <Shadow>[Shadow(color: Colors.black, blurRadius: 2.0)],
            ),
            tileColor: Color.fromARGB(255, 255, 238, 188),
            onTap: () {
              Navigator.pushReplacement(
                context,
                MaterialPageRoute(
                    builder: (context) => const PurchasePremium()),
              );
            },
          ),
          ListTile(
            title: const Text("Log Out"),
            onTap: () {
              contex = context;
              showDialog(context: context, builder: (context) => LogOutAlert());
            },
          ),
          AboutListTile(
            icon: Icon(
              Icons.info,
            ),
            applicationIcon: Image.asset(
              'assets/icons/drawer_icon.png',
              height: 50,
            ),
            applicationName: 'Reckon Malware',
            applicationVersion: '1.0.0',
            applicationLegalese: 'Copyright Â© 2023',
            child: Text("About Reckon Malware"),
          ),
        ],
      ),
    );
  }
}
