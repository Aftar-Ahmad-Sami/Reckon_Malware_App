import 'dart:io';

import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:flutter_cache_manager/flutter_cache_manager.dart';
import 'package:path_provider/path_provider.dart';
import '../views/ip_address_check.dart';
import '../views/scan_URL.dart';
import 'package:get/get.dart';
import '../views/domain_checking.dart';
import '../views/file_upload.dart';

import '../views/file_report_checker.dart';
import '../views/large_file_upload.dart';
import '../views/sign_in.dart';
import 'snackbar.dart';

class UniformDrawer extends StatelessWidget {
  const UniformDrawer({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return Drawer(
      child: ListView(
        padding: EdgeInsets.zero, //removes padding from ListView
        children: [
          const UserAccountsDrawerHeader(
            decoration: BoxDecoration(color: Color(0xff4f5eea)),
            accountName: Text("Aftar Ahmad Sami"),
            accountEmail: Text("aftarahmadsami@gmail.com"),
            currentAccountPicture: FlutterLogo(),
          ),
          ListTile(
            title: const Text("Get File Report"),
            onTap: () {
              Get.to(const FileReport());
            },
          ),
          ListTile(
            title: const Text("File Upload"),
            onTap: () {
              Get.to(const FileUpload());
            },
          ),
          ListTile(
            title: const Text("Large File Upload"),
            onTap: () {
              Get.to(const LargeFileUpload());
            },
          ),
          ListTile(
            title: const Text("Scan URL"),
            onTap: () {
              Get.to(const ScanURL());
            },
          ),
          ListTile(
            title: const Text("Scan IP Address"),
            onTap: () {
              Get.to(const IpAddressChecking());
            },
          ),
          ListTile(
            title: const Text("Scan Domain"),
            onTap: () {
              Get.to(const DomainChecking());
            },
          ),
          ListTile(
            title: const Text("Clean Cache"),
            onTap: () {
              _deleteCacheDDir();
              Navigator.pop(context);
              ScaffoldMessenger.of(context).showSnackBar(cleanedSnackBar());
            },
          ),
          ListTile(
            title: const Text("Log Out"),
            onTap: () {
              FirebaseAuth.instance.signOut();
              Navigator.pop(context);
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => const SignIn()),
              );
            },
          ),
          const AboutListTile(
            icon: Icon(
              Icons.info,
            ),
            applicationIcon:
                Icon(Icons.shield, color: Color(0xff218150), size: 50),
            applicationName: 'Reckon Malware',
            applicationVersion: '1.0.0',
            applicationLegalese: 'Copyright Â© 2022',
            child: Text("About Reckon Malware"),
          ),
        ],
      ),
    );
  }

  Future<void> _deleteCacheDDir() async {
    final cacheDir = await getTemporaryDirectory();

    if (cacheDir.existsSync()) {
      cacheDir.deleteSync(recursive: true);
    }
  }

  Future<void> _deleteCacheDir() async {
    var tempDir = (await getTemporaryDirectory()).path;
    print(tempDir);
    tempDir = '$tempDir/com.example.reckon_malware';
    print(tempDir);
    Directory(tempDir).delete(recursive: true);
  }
}
