import 'package:flutter/material.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:path_provider/path_provider.dart';
import 'package:reckonmalware/components/uniform_app_bar.dart';
import 'package:reckonmalware/components/uniform_drawer.dart';

import '../components/snackbar.dart';

class AppSettings extends StatefulWidget {
  const AppSettings({super.key});

  @override
  State<AppSettings> createState() => _AppSettingsState();
}

class _AppSettingsState extends State<AppSettings> {
  @override
  Widget build(BuildContext context) {
    var widthx = MediaQuery.of(context).size.width;
    var heightx = MediaQuery.of(context).size.height;
    return Scaffold(
      extendBodyBehindAppBar: true,
      appBar: UniformAppBar(titleName: "AppSettings"),
      drawer: UniformDrawer(),
      body: Stack(
        children: [
          Container(
            height: heightx,
            width: widthx,
            decoration: BoxDecoration(
              color: Color.fromARGB(255, 15, 4, 56),
            ),
            child: Column(
                // mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  SizedBox(
                    height: 130,
                  ),
                  Align(
                      alignment: Alignment.topCenter,
                      child: InkWell(
                        onTap: () {
                          _deleteCacheDDir();
                          //      Navigator.pop(context);
                          ScaffoldMessenger.of(context)
                              .showSnackBar(cleanedSnackBar());
                        },
                        child: Container(
                          decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(20),
                              color: Colors.white54),
                          width: widthx * 0.9,
                          alignment: Alignment.centerLeft,
                          padding: EdgeInsets.only(left: 25),
                          height: 60,
                          // color: Colors.black12,
                          child: Text(
                            'Clear Cache',
                            style: TextStyle(fontWeight: FontWeight.bold),
                          ),
                        ),
                      )),
                ]),
          )
        ],
      ),
    );
  }

  Future<void> _deleteCacheDDir() async {
    final cacheDir = await getTemporaryDirectory();
    if (cacheDir.existsSync()) {
      cacheDir.deleteSync(recursive: true);
    }
  }
}
