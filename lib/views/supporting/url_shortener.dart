import 'dart:convert';
import 'dart:math';
import 'package:flutter/services.dart';
import 'package:get/get.dart';
import 'package:http/http.dart' as http;
import 'package:flutter/material.dart';
import 'package:reckonmalware/components/uniform_app_bar.dart';
import 'package:reckonmalware/components/uniform_drawer.dart';

import '../error_pages/error_404.dart';

class UrlShortener extends StatefulWidget {
  const UrlShortener({super.key});

  @override
  State<UrlShortener> createState() => _UrlShortenerState();
}

class _UrlShortenerState extends State<UrlShortener> {
  final textController = TextEditingController();

  final formkey = GlobalKey<FormState>();
  void validate() {
    if (formkey.currentState!.validate()) {}
  }

  Future<bool> formCheck(BuildContext context) async {
    if (textController.text == "") {
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
        content: Text('Enter an URL'),
      ));
      return false;
    }
    return true;
  }

  @override
  Widget build(BuildContext context) {
    var heightx = MediaQuery.of(context).size.height;
    var widthx = MediaQuery.of(context).size.width;

    return Listener(
      onPointerDown: (PointerDownEvent event) =>
          FocusManager.instance.primaryFocus?.unfocus(),
      child: Scaffold(
        extendBodyBehindAppBar: true,
        appBar: UniformAppBar(titleName: ""),
        drawer: UniformDrawer(),
        body: Stack(children: [
          Container(
            width: double.infinity,
            height: double.infinity,
            decoration: const BoxDecoration(
                gradient: LinearGradient(colors: [
              Color.fromARGB(255, 11, 94, 69),
              Color.fromARGB(255, 5, 8, 36),
            ], begin: Alignment.bottomRight, end: Alignment.topLeft)),
          ),
          SafeArea(
              child: SingleChildScrollView(
            child: Form(
                key: formkey,
                child: Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      // Transform.rotate(
                      //   angle: 145 * pi / 180,
                      //   child: const Icon(
                      //     Icons.link_rounded,
                      //     size: 150,
                      //     color: Colors.white,
                      //   ),
                      // ),
                      SizedBox(
                        height: heightx * 0.130,
                      ),
                      const Text(
                        '      Reckon \n Url Shortner',
                        style: TextStyle(
                            fontFamily: 'KaushanScript',
                            fontWeight: FontWeight.bold,
                            color: Colors.white,
                            fontSize: 42),
                      ),

                      // Padding(
                      //   padding: const EdgeInsets.fromLTRB(30, 0, 70, 0),
                      //   child: TextFormField(),
                      // )

                      SizedBox(
                        height: heightx * .020,
                      ),
                      const Text(
                        'We make your life easier',
                        style: TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Color.fromARGB(255, 128, 124, 124),
                            fontSize: 14),
                      ),

                      SizedBox(
                        height: heightx * .060,
                      ),

                      SizedBox(
                        width: widthx * .9,
                        child: TextFormField(
                          // key: checkKey,
                          controller: textController,
                          style: const TextStyle(
                            fontFamily: 'Itim-Regular',
                            fontSize: 15,
                            color: Colors.white,
                          ),
                          decoration: InputDecoration(
                            hintText: 'Paste your link here',
                            hintStyle: TextStyle(
                                fontFamily: 'Itim-Regular',
                                fontSize: 14,
                                color: Colors.grey[400]),
                            prefixIcon: Transform.rotate(
                                angle: 45 * pi / 180,
                                child: Icon(
                                  Icons.link,
                                  color: Colors.grey[400],
                                )),
                            border: OutlineInputBorder(
                                borderSide: BorderSide(color: Colors.white),
                                borderRadius: BorderRadius.circular(25)),
                            enabledBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(25),
                                borderSide: const BorderSide(
                                  color: Colors.white,
                                  width: 1.5,
                                )),
                            focusedBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(25),
                                borderSide: const BorderSide(
                                  color: Colors.yellow,
                                  width: 2.5,
                                )),
                          ),
                        ),
                      ),

                      SizedBox(
                        height: heightx * .320,
                      ),

                      SizedBox(
                        width: widthx * .9,
                        height: 50,
                        child: ElevatedButton(
                          onPressed: () async {
                            if (await formCheck(context)) {
                              var link =
                                  await shortenUrl(url: textController.text);
                              if (link != null) {
                                showDialog(
                                    context: context,
                                    builder: (contex) {
                                      return AlertDialog(
                                        shadowColor: Colors.red,
                                        shape: RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(25)),
                                        backgroundColor:
                                            Color.fromARGB(255, 11, 94, 69),
                                        title: Text('Your short URL is here',
                                            style: TextStyle(
                                                color: Colors.white,
                                                fontFamily: 'itim-regular'),
                                            textAlign: TextAlign.center),
                                        content: SizedBox(
                                          height: heightx * 0.130,
                                          child: Column(
                                            children: [
                                              Row(
                                                children: [
                                                  Text(
                                                    link,
                                                    style: TextStyle(
                                                        fontFamily:
                                                            'Itim-Regular',
                                                        fontSize: 18,
                                                        color: Colors.white),
                                                  ),
                                                  SizedBox(width: widthx * 0.1),
                                                  IconButton(
                                                    onPressed: () {
                                                      Clipboard.setData(
                                                              ClipboardData(
                                                                  text: link))
                                                          .then((value) =>
                                                              ScaffoldMessenger
                                                                      .of(
                                                                          context)
                                                                  .showSnackBar(
                                                                      SnackBar(
                                                                          content:
                                                                              Text("Link Copied"))));
                                                    },
                                                    icon: Icon(
                                                      Icons.copy,
                                                      color: Colors.white,
                                                    ),
                                                  )
                                                ],
                                              ),
                                              ElevatedButton.icon(
                                                  style: ElevatedButton.styleFrom(
                                                      backgroundColor:
                                                          Colors.black,
                                                      shape:
                                                          RoundedRectangleBorder(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          25))),
                                                  onPressed: () {
                                                    textController.clear();
                                                    Navigator.pop(
                                                        context, true);
                                                  },
                                                  icon: Icon(
                                                    Icons.close_rounded,
                                                    color: Colors.white,
                                                    size: 16,
                                                  ),
                                                  label: Title(
                                                      color: Colors.white,
                                                      child: Text('Close')))
                                            ],
                                          ),
                                        ),
                                      );
                                    });
                              }
                            } else {
                              var error = e.toString();
                              ScaffoldMessenger.of(context)
                                  .showSnackBar(SnackBar(content: Text(error)));
                            }
                          },
                          child: Text(
                            'Generate Link',
                            style: const TextStyle(
                                fontFamily: 'Itim-Regular', fontSize: 18),
                          ),
                          style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.black,
                              side: BorderSide(color: Colors.white),
                              shape: RoundedRectangleBorder(
                                  borderRadius:
                                      BorderRadius.all(Radius.circular(20)))),
                        ),
                      ),
                    ],
                  ),
                )),
          )),
        ]),
      ),
    );
  }
}

Future<String?> shortenUrl({required String url}) async {
  try {
    final res = await http.post(
        Uri.parse('https://api.shrtco.de/v2/shorten?url='),
        body: {'url': url});

    if (res.statusCode == 201) {
      final result = json.decode(res.body);
      return result['result']['short_link'];
    } else {
      Get.to(Error404());
    }
  } catch (e) {
    Get.to(Error404());
  }
  return null;
}
