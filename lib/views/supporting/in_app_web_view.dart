import 'package:flutter/material.dart';
import 'package:flutter_inappwebview/flutter_inappwebview.dart';
import 'package:reckonmalware/components/uniform_drawer.dart';

class InAppWebViewWidget extends StatefulWidget {
  const InAppWebViewWidget({super.key});

  @override
  State<InAppWebViewWidget> createState() => _InAppWebViewWidgetState();
}

class _InAppWebViewWidgetState extends State<InAppWebViewWidget> {
  //
  // variable
  late final InAppWebViewController webViewController;
  late final PullToRefreshController refreshController;
  var url;
  double progress = 0;
  // ignore: non_constant_identifier_names
  final TextEditingController UrlController = TextEditingController();
  var initialUrl = "https://www.google.com/";
  var isLoading = false;

  /// init State
  @override
  void initState() {
    super.initState();
    refreshController = PullToRefreshController(
      onRefresh: () {
        webViewController.reload();
      },
      options: PullToRefreshOptions(
        color: Colors.white,
        backgroundColor: Colors.black87,
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Listener(
      onPointerDown: (PointerDownEvent event) =>
          FocusManager.instance.primaryFocus?.unfocus(),
      child: Scaffold(
        appBar: AppBar(
          title: Container(
            padding: const EdgeInsets.symmetric(horizontal: 4.0),
            decoration: BoxDecoration(
                color: Colors.white, borderRadius: BorderRadius.circular(12)),
            child: TextField(
              onTap: () {
                UrlController.selection = TextSelection(
                    baseOffset: 0,
                    extentOffset: UrlController.value.text.length);
              },
              onSubmitted: (value) {
                url = Uri.parse(value);
                if (url.scheme.isEmpty) {
                  url = Uri.parse("${initialUrl}search?q=$value");
                }
                webViewController.loadUrl(urlRequest: URLRequest(url: url));
              },
              controller: UrlController,
              textAlignVertical: TextAlignVertical.center,
              decoration: const InputDecoration(
                hintText: "https://www.google.com/",
                prefixIcon: Icon(Icons.search),
              ),
            ),
          ),
          actions: [
            /// back button
            // IconButton(
            //   icon: const Icon(Icons.arrow_back_ios),
            //   onPressed: () async {
            //     final messenger = ScaffoldMessenger.of(context);
            //     if (await webViewController.canGoBack()) {
            //       await webViewController.goBack();
            //     } else {
            //       messenger.showSnackBar(
            //         const SnackBar(content: Text('No Back History')),
            //       );
            //       return;
            //     }
            //   },
            // ),

            // /// Forward button
            // IconButton(
            //   icon: const Icon(Icons.arrow_forward_ios),
            //   onPressed: () async {
            //     final messenger = ScaffoldMessenger.of(context);
            //     if (await webViewController.canGoForward()) {
            //       await webViewController.goForward();
            //     } else {
            //       messenger.showSnackBar(
            //         const SnackBar(content: Text('No Forward History')),
            //       );
            //       return;
            //     }
            //   },
            // ),

            /// Reload button
            IconButton(
                onPressed: () async {
                  webViewController.reload();
                },
                icon: const Icon(Icons.refresh))
          ],
        ),

        /// drawer
        drawer: const UniformDrawer(),

        /// body
        body: Column(
          children: [
            Expanded(
              child: Stack(
                //alignment: Alignment.center,
                children: [
                  InAppWebView(
                    initialUrlRequest: URLRequest(url: Uri.parse(initialUrl)),
                    onWebViewCreated: (controller) =>
                        webViewController = controller,

                    /// To refresh
                    pullToRefreshController: refreshController,

                    /// "onLoadStart"
                    onLoadStart: (controller, url) {
                      var variable = url.toString();
                      setState(() {
                        isLoading = true;
                        UrlController.text = variable;
                      });
                    },

                    /// "onLoadStop"
                    onLoadStop: (controller, url) {
                      refreshController.endRefreshing();
                      setState(() {
                        isLoading = false;
                      });
                    },

                    /// "onProgressChanged"
                    onProgressChanged: (controller, progress) {
                      if (progress == 100) {
                        refreshController.endRefreshing();
                      }
                      setState(() {
                        this.progress = progress / 100;
                      });
                    },
                  ),

                  /// Visibility
                  Visibility(
                    visible: isLoading,
                    child: LinearProgressIndicator(
                      value: progress,
                      valueColor: const AlwaysStoppedAnimation(
                        Colors.blue,
                      ),
                    ),
                  )
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
