import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart' as gt;
import '../../components/snackbar.dart';
import '../../components/uniform_app_bar.dart';
import '../../components/uniform_drawer.dart';
import '../error_pages/error_404.dart';
import 'result_pages/url_result.dart';

class ScanURL extends StatefulWidget {
  const ScanURL({Key? key}) : super(key: key);

  @override
  State<ScanURL> createState() => _ScanURLState();
}

class _ScanURLState extends State<ScanURL> {
  final TextEditingController _urlController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    final double screenHeight = MediaQuery.of(context).size.height;
    final double screenWidth = MediaQuery.of(context).size.width;
    return Listener(
      onPointerDown: (PointerDownEvent event) =>
          FocusManager.instance.primaryFocus?.unfocus(),
      child: SafeArea(
        child: Scaffold(
          extendBodyBehindAppBar: true,
          appBar: UniformAppBar(
            titleName: 'Scan URL',
          ),

          // backgroundColor: Color.fromARGB(255, 45, 180, 45),
          drawer: const UniformDrawer(),
          body: SingleChildScrollView(
           
            child: Container(
              width: screenWidth,
              height: screenHeight,
              decoration: BoxDecoration(
                  gradient: LinearGradient(
                colors: [
                  Color.fromARGB(255, 23, 54, 94),
                  Color.fromARGB(255, 3, 29, 29),
                ],
                end: Alignment.topLeft,
                begin: Alignment.bottomRight,
              )),
              alignment: Alignment.center,
              child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    // const FaIcon(FontAwesomeIcons.earthAmericas, size: 60),
                    SizedBox(
                      height: screenHeight * 0.110,
                    ),

                    const ImageIcon(
                      AssetImage('assets/icons/web.png'),
                      size: 90,
                      color: Colors.white,
                    ),
                    SizedBox(height: screenHeight > screenWidth ? 40 : 5),
                    Padding(
                      padding: const EdgeInsets.all(25),
                      child: TextField(
                        style: const TextStyle(
                          fontFamily: 'Itim-Regular',
                          fontSize: 16,
                          color: Colors.white,
                        ),
                        controller: _urlController,
                        decoration: const InputDecoration(
                            helperText: 'e.g. www.google.com',
                            helperStyle: TextStyle(color: Colors.grey),
                            hintText: 'Enter your URL here',
                            hintStyle: TextStyle(
                                fontFamily: 'Itim-Regular',
                                fontSize: 16,
                                color: Colors.grey),
                            prefixIcon: Icon(
                              Icons.link,
                              color: Colors.grey,
                            ),
                            focusedBorder: UnderlineInputBorder(
                              borderSide:
                                  BorderSide(color: Colors.cyan, width: 2),
                            ),
                            enabledBorder: UnderlineInputBorder(
                                borderSide:
                                    BorderSide(color: Colors.white, width: 2))),
                      ),
                    ),

                    SizedBox(
                      height: screenHeight * 0.020,
                    ),
                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 10),
                      child: const Text(
                        'By submitting data above, you are agreeing to our Terms of Service and Privacy Policy, and to the sharing of your URL submission with the security community. Please do not submit any personal information',
                        textAlign: TextAlign.center,
                        style: TextStyle(
                          color: Color.fromARGB(255, 128, 124, 124),
                          fontSize: 14,
                        ),
                      ),
                    ),

                    SizedBox(
                      height: screenHeight * 0.040,
                    ),
                    SizedBox(
                      width: screenWidth * 0.8,
                      height: 40,
                      child: ElevatedButton.icon(
                        onPressed: () async {
                          if (_urlController.text.isEmpty) {
                            ScaffoldMessenger.of(context)
                                .showSnackBar(warningSnackBarForURL());
                            return null;
                          }
                          var state =
                              await getScanningResult(_urlController.text);
                          if (state == "null") {
                            ScaffoldMessenger.of(context)
                                .showSnackBar(warningSnackBarForURL());
                            return null;
                          }
                          if (state == "Exception") {
                            ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                content: Text("NETWORK ERROR HAS OCCURED")));
                            gt.Get.to(Error404());
                            return null;
                          }
                          gt.Get.to(UrlResult(
                              url: state.toString(), mode: "scan_url"));
                        },
                        icon: Icon(
                          Icons.search,
                          size: 30,
                        ),
                        label: Text(
                          'Scan URL',
                          style: const TextStyle(
                              fontFamily: 'Itim-Regular', fontSize: 18),
                        ),
                        style: ElevatedButton.styleFrom(
                            backgroundColor: Colors.black,
                            side: BorderSide(color: Colors.white),
                            shape: RoundedRectangleBorder(
                                borderRadius:
                                    BorderRadius.all(Radius.circular(20)))),
                      ),
                    ),
                    // TextField(),
                  ]),
            ),
          ),
        ),
      ),
    );
  }

  getScanningResult(String urlToBeScanned) async {
    Response response;

    try {
      FormData formdata = FormData.fromMap({
        "apikey":
            "7586c4abefe3e3cf9c2d4ffffd39e383ce28ed23a2c0004d269e01e007cdd8c3",
        "url": urlToBeScanned,
      });
      response = await Dio().post(
        'https://www.virustotal.com/vtapi/v2/url/scan',
        data: formdata,
        options: Options(headers: {
          "accept": "application/json",
          "Content-Type": "application/x-www-form-urlencoded",
        }),
      );
      if (response.statusCode == 200) {
        var conversion = response.data;
        var str = conversion['scan_id'];
        return str.toString();
      }
    } on Exception {
      return "Exception";
    }
  }
}

// 7586c4abefe3e3cf9c2d4ffffd39e383ce28ed23a2c0004d269e01e007cdd8c3
// https://www.virustotal.com/_ah/upload/AMmfu6bHOPYh9gS4acZv3TZ4p9B8Gw2fw5NDj0r_N6jwDMar6GVg9sbz1dysI4MH9gkk9sC38BreIprv9pl-3G23yVSGjHw1yJSUlhy1NcECkQG_c7oztz9wiXG9yV33gqOLnq4sEA31X9na5tFpEdX8We8E-qd1S63ewknkcaLBHtRuh9tV7klADtRKBO8x-QNSZB-hSErY7EKMuSZexGDV4ZZ6b0D7gIuw0Db8xnCWS7LLQ-4Sf9hK3s7oTfEVN7J7zO_9Ij26LEamJxPdCGQNFAa-PEnKIaY8okb0d82cTZlVjMHFBlc9kt3h1NEEVmhj-5ixrriNSrILkLL72jNB0VvoKeAtNRh3ub3n03vj5FUDygjW2UM4zYfCfnvMhWi75UOWTB8ESCuvfYwW88Vb6mDOlfWE6Nkn0BWXYWJWMaUs2q-c59qTirsziDpSvf3AWeLPV_AoKOEnbMd9OUBJH0mTYcLHL_y315zR_kaAZ_HzLr4tdNBKTy73L4_0Qcc0R2LRk176jqPiINptrqkW6fgac4umHPO9n-M9U2WNsBVzX0XIv16jlFRhCtOjo0JzRuYPJ6JoCSYPV4MWWivM7y2765WxDAOnLaRiqB4h-dJjHZKAh7cdWWy8hDlsgYV6h0QUAOJNNzF-odKg2F1qiuG7PO18CsvlrdAFUDDFmNdrx3BHsUiI4o9vcr2WmGIbbUBsA1cuGgsOSF2pacIoh83fUK4OQgJ7zN2skIm50rzY1dQP45by1KyWQRM5R2xSrUFVbAoOyrjR4ZHxgQUSoD0mh8Lzw-NqcVajx9GcSQnmTdwliU0Sl9QxC3-ChEV6eG_XdnBfgv4t1dK-Z2G9MLFcu8TPEuMomgC9k84ZVZ13ls0EBBSIZDPVm-TdvBhMG4H2f6NvpqLmPcziFd-jf8JCZOqS0dR972amwThk2IFFXtAUPCpGurRmh8kSm6cNnbazFqfiWy4IiB_THAl6CyZRyqx8ed1D7ZLS1pw4pye3ZObztxDZF5Tk3fpEdEgDrbfKS9TSS5-PE5NW93jQttmjszU10Yitj3gVT8NuDqqSdZzL9njGqQNV7eBB7zC4jWztv0-iJBJQFmGlbM8lVfwTouj5_m70dkY5DnRwkENGQ0aWywK65O8vFZ5TOYUuIjaMZTrcxo-UbBo79_14tnsEUjKxV7W8Crzc7yHTAgnlhzOMOsVEnqtuxfGTQm85aI5WOJDPY47CT3F9635YNe8MdnSnzznUIaxGtS25uASxDybxL9I/ALBNUaYAAAAAY5sCB6bR8nRc6dcCu-IQc3vrd1_fM6_y/

// {
//   "permalink": "https://www.virustotal.com/gui/url/4671ca02d929289d11f8855e109d4df50495f875f82cac91fce9d31742dad7ae/detection/u-4671ca02d929289d11f8855e109d4df50495f875f82cac91fce9d31742dad7ae-1669469905",
//   "resource": "http://www.youtube.com/",
//   "url": "http://www.youtube.com/",
//   "response_code": 1,
//   "scan_date": "2022-11-26 13:38:25",
//   "scan_id": "4671ca02d929289d11f8855e109d4df50495f875f82cac91fce9d31742dad7ae-1669469905",
//   "verbose_msg": "Scan request successfully queued, come back later for the report"
// }
//

// {
//   "scan_id": "4671ca02d929289d11f8855e109d4df50495f875f82cac91fce9d31742dad7ae-1669469905",
//   "resource": "4671ca02d929289d11f8855e109d4df50495f875f82cac91fce9d31742dad7ae-1669469905",
//   "url": "http://www.youtube.com/",
//   "response_code": 1,
//   "scan_date": "2022-11-26 13:38:25",
//   "permalink": "https://www.virustotal.com/gui/url/4671ca02d929289d11f8855e109d4df50495f875f82cac91fce9d31742dad7ae/detection/u-4671ca02d929289d11f8855e109d4df50495f875f82cac91fce9d31742dad7ae-1669469905",
//   "verbose_msg": "Scan finished, scan information embedded in this object",
//   "filescan_id": null,
//   "positives": 0,
//   "total": 91,
//   "scans": {
//     "Bkav": {
//       "detected": false,
//       "result": "unrated site"
