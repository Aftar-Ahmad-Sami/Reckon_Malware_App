import 'package:flutter/material.dart';
import 'package:reckonmalware/constants/constants.dart';
import 'package:syncfusion_flutter_charts/charts.dart';

class Data {
  final String label;
  final int value;
  final color;

  Data(this.label, this.value, this.color);
}

class ResultStatistics extends StatefulWidget {
  ResultStatistics({super.key});

  @override
  State<ResultStatistics> createState() => _ResultStatisticsState();
}

class _ResultStatisticsState extends State<ResultStatistics> {
  List<Data> data = [
    Data('Malicious', maliciousCount, Colors.redAccent),
    Data('Cleaned', cleanedCount, Colors.greenAccent),
    Data('Unknown', unknownCount, Colors.amberAccent),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      extendBodyBehindAppBar: true,
      appBar: AppBar(
        title: Text(
          "STATISTICS",
          style: TextStyle(color: Colors.black),
        ),
        backgroundColor: Colors.transparent,
        elevation: 0,
        leading: IconButton(
          color: Colors.amber,
          icon: Icon(
            Icons.arrow_back,
            color: Colors.black,
          ),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            SfCircularChart(
              legend: Legend(isVisible: true),
              series: <CircularSeries>[
                PieSeries<Data, String>(
                  dataSource: data,
                  xValueMapper: (Data data, _) => data.label,
                  yValueMapper: (Data data, _) => data.value,
                  pointColorMapper: (Data data, _) => data.color,
                  // dataLabelSettings: DataLabelSettings(
                  //   textStyle: TextStyle(fontSize: 20),
                  //   // labelIntersectAction: LabelIntersectAction.hide,
                  //   isVisible: true,
                  // ),
                ),
              ],
            ),
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text("Total Antivirus: $totalCount"),
                SizedBox(height: 10),
                Text("Total Malicious:\t$maliciousCount"),
                SizedBox(height: 10),
                Text("Total Cleaned:\t$cleanedCount"),
                SizedBox(height: 10),
                Text("Total Unknown:\t$unknownCount")
              ],
            )
          ],
        ),
      ),
    );
  }
}
