import 'dart:io';

import 'package:crypto/crypto.dart';
import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
// ignore: import_of_legacy_library_into_null_safe
import 'package:open_file/open_file.dart';
import '../../components/snackbar.dart';
import '../../components/uniform_app_bar.dart';
import '../../components/uniform_drawer.dart';
import 'result_pages/result_page.dart';

class FileReport extends StatefulWidget {
  const FileReport({Key? key}) : super(key: key);
  @override
  State<FileReport> createState() => _FileReportState();
}

class _FileReportState extends State<FileReport> {
  late Image image1, image2;
  String fileName = "", filePath = "";

  @override
  void initState() {
    super.initState();
    image1 = Image.asset("assets/images/sunset_bg.jpg", fit: BoxFit.cover);
    image2 = Image.asset("assets/images/waterfall_bg.jpg", fit: BoxFit.cover);
  }

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    precacheImage(image1.image, context);
    precacheImage(image2.image, context);
  }

  @override
  Widget build(BuildContext context) {
    var hheight = MediaQuery.of(context).size.height;
    var wwidth = MediaQuery.of(context).size.width;

    return Stack(
      children: <Widget>[
        SizedBox(
          width: wwidth,
          height: hheight,
          child: hheight > wwidth ? image1 : image2,
        ),
        Listener(
          onPointerDown: (PointerDownEvent event) =>
              FocusManager.instance.primaryFocus?.unfocus(),
          child: Scaffold(
            backgroundColor: Colors.green[300],
            drawer: const UniformDrawer(),
            appBar: UniformAppBar(titleName: 'Get File Report'),
            body: Padding(
              padding: const EdgeInsets.only(
                  left: 20, right: 20, bottom: 0, top: 120),
              child: Container(
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(25),
                  color: Color.fromARGB(255, 194, 215, 216),
                ),
                height: hheight * .550,
                child: Container(
                  //color: Colors.yellow,
                  //    constraints: BoxConstraints(maxWidth: 900),
                  //   padding: hheight > wwidth ? EdgeInsets.all(25) : EdgeInsets.all(40),
                  alignment: Alignment.center,
                  child: hheight > wwidth
                      ? Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            SizedBox(
                              height: 10,
                            ),
                            Text(
                              'UPLOAD FILES',
                              style: TextStyle(
                                  fontSize: 24, fontWeight: FontWeight.bold),
                            ),
                            SizedBox(
                              height: hheight * 0.010,
                            ),
                            Text(
                              'Upload Documents you want to scan.',
                              style: TextStyle(
                                  fontSize: 17, fontWeight: FontWeight.normal),
                            ),
                            SizedBox(
                              height: hheight * 0.040,
                            ),
                            selectedFileBox(wwidth, hheight),
                            const SizedBox(
                              height: 20,
                            ),
                            selectAndScanButtons(wwidth, hheight),
                          ],
                        )
                      : Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                selectedFileBox(wwidth, hheight),
                                const SizedBox(
                                  width: 40,
                                ),
                                selectAndScanButtons(wwidth, hheight),
                              ],
                            ),
                            SizedBox(
                              height: hheight * 0.2,
                            )
                          ],
                        ),
                ),
              ),
            ),
          ),
        ),
      ],
    );
  }

  // ------------ Helper Methods-------------//

  Widget selectedFileBox(double wwidth, double hheight) {
    return Container(
        width: hheight > wwidth ? wwidth * 0.8 : wwidth * 0.5,
        height: hheight > wwidth ? 250 : 100,
        padding:
            const EdgeInsets.only(top: 25, bottom: 25, left: 25, right: 10),
        decoration: BoxDecoration(
          color: const Color.fromRGBO(255, 255, 255, 0.3),
          borderRadius: BorderRadius.circular(25),
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Text(
              'Drop Your File Here',
              style: TextStyle(fontSize: 15, color: Colors.black),
            ),
            SizedBox(
              height: 20,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              //     crossAxisAlignment: CrossAxisAlignment.end,
              children: [
                GestureDetector(
                  onTap: () async {
                    if (filePath == "") return;
                    await openFile(filePath);
                    setState(() {});
                  },
                  child: Container(
                    width: 160,
                    height: 50,
                    color: Colors.transparent,
                    alignment: Alignment.center,
                    child: Text(
                      fileName,
                      overflow: TextOverflow.ellipsis,
                    ),
                  ),
                ),
                IconButton(
                  icon: const Icon(Icons.cancel_rounded),
                  color: Colors.black,
                  // alignment: Alignment.bottomLeft,
                  iconSize: 35,
                  onPressed: () {
                    fileName = "";
                    filePath = "";
                    setState(() {});
                  },
                )
              ],
            ),
            SizedBox(
              height: 50,
            ),
            ElevatedButton(
              child: const Text("Select File"),
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.green[300],
              ),
              onPressed: () async {
                final select = await FilePicker.platform.pickFiles();
                if (select == null) return;

                final file = select.files.first;

                changeFileNameAndPath(file);
                setState(() {});
              },
            ),
          ],
        ));
  }

  Widget selectAndScanButtons(double wwidth, double hheight) {
    return SizedBox(
      //  color: Colors.red,
      // height: 150,
      // child: Column(
      //   mainAxisAlignment: MainAxisAlignment.center,
      //   children: [
      //     ElevatedButton(
      //       child: const Text("Select File"),
      //       onPressed: () async {
      //         final select = await FilePicker.platform.pickFiles();
      //         if (select == null) return;

      //         final file = select.files.first;

      //         changeFileNameAndPath(file);
      //         setState(() {});
      //       },
      //     ),
      //  SizedBox(height: 50),
      child: Padding(
        padding: const EdgeInsets.only(left: 15.0),
        child: ElevatedButton(
          child: const Text("Get Report"),
          style: ElevatedButton.styleFrom(backgroundColor: Colors.green[300]),
          onPressed: () async {
            String? url = await hashingFile();
            url != null
                ? Get.to(ResultPage(url: url, mode: "report"))
                : setState(() {});
          },
        ),
      ),
      // ],
    );
    // );
  }

  //---------------------Processing Methods---------------//

  hashingFile() async {
    File file = File(filePath);
    if (!file.existsSync()) {
      //var warning = WarningSnackBar();
      ScaffoldMessenger.of(context).showSnackBar(warningSnackBar());
      //setState(() {});
      return null;
    }

    final stream = file.openRead();
    final hash = await md5.bind(stream).first;
    String out = hash.toString();
    // out = "8638c096d8fbe36d0269979c40de1607";
    return 'https://www.virustotal.com/api/v3/files/${out.toString()}';
  }

  void changeFileNameAndPath(var file) {
    fileName = file.name;
    filePath = file.path;
  }

  openFile(var file) {
    OpenFile.open(file);
  }
}
