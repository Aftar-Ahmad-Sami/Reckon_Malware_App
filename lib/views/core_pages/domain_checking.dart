import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:get/get.dart';

import '../../components/snackbar.dart';
import '../../components/uniform_app_bar.dart';
import '../../components/uniform_drawer.dart';
import 'ip_check.dart';

class DomainChecking extends StatefulWidget {
  const DomainChecking({super.key});

  @override
  State<DomainChecking> createState() => _DomainCheckingState();
}

class _DomainCheckingState extends State<DomainChecking> {
  final TextEditingController _txtController = TextEditingController();
  @override
  Widget build(BuildContext context) {
    final double screenHeight = MediaQuery.of(context).size.height;
    final double screenWidth = MediaQuery.of(context).size.width;
    return Listener(
      onPointerDown: (PointerDownEvent event) =>
          FocusManager.instance.primaryFocus?.unfocus(),
      child: Scaffold(
        extendBodyBehindAppBar: true,
        appBar: UniformAppBar(titleName: "Scan Domain"),
        // backgroundColor: const Color.fromARGB(255, 114, 128, 211),
        drawer: const UniformDrawer(),
        body: Stack(
          children: [
            Container(
              decoration: BoxDecoration(
                  gradient: RadialGradient(
                colors: [
                  Color.fromARGB(255, 247, 247, 245),
                  Color.fromARGB(255, 231, 66, 66),
                ],
                center: Alignment.bottomCenter,
                radius: 2,
              )),
              child: Container(
                alignment: Alignment.center,
                child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      // const FaIcon(FontAwesomeIcons.certificate, size: 60),
                      Icon(
                        Icons.domain_verification_rounded,
                        size: 100,
                      ),

                      SizedBox(height: screenHeight > screenWidth ? 100 : 5),
                      Padding(
                        padding: const EdgeInsets.all(35),
                        child: TextField(
                          controller: _txtController,
                          decoration: const InputDecoration(
                              helperText: 'e.g. www.',
                              helperStyle: TextStyle(
                                  color: Color.fromARGB(255, 13, 48, 3)),
                              hintText: 'Enter Domain name',
                              hintStyle: TextStyle(
                                  // fontFamily: 'Itim-Regular',
                                  fontSize: 16,
                                  color: Color.fromARGB(255, 59, 4, 4)),
                              prefixIcon: Icon(
                                Icons.domain_add_rounded,
                                color: Color.fromARGB(255, 88, 7, 7),
                              ),
                              focusedBorder: UnderlineInputBorder(
                                borderSide: BorderSide(
                                    color: Color.fromARGB(255, 39, 24, 172),
                                    width: 2),
                              ),
                              enabledBorder: UnderlineInputBorder(
                                  borderSide: BorderSide(
                                      color: Color.fromARGB(255, 209, 15, 15),
                                      width: 2))),
                        ),
                      ),
                      SizedBox(height: screenHeight > screenWidth ? 100 : 5),
                      SizedBox(
                        height: 40,
                        width: screenWidth * 0.4,
                        child: ElevatedButton.icon(
                          onPressed: () async {
                            if (_txtController.text.isEmpty) {
                              ScaffoldMessenger.of(context)
                                  .showSnackBar(warningSnackBarForURL());
                            } else {
                              var ipadd = _txtController.text;
                              ipadd =
                                  "https://www.virustotal.com/api/v3/domains/$ipadd";
                              Get.to(IpCheck(url: ipadd, mode: "scan_domain"));
                            }
                          },
                          icon: Icon(Icons.search),
                          label: Text('Scan'),
                          style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.black,
                              shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(25))),
                        ),
                      ),
                      // TextField(),
                    ]),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
