import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:reckonmalware/views/terms_and_policy/terms_and_policy.dart';
import '../scan_URL.dart';
import 'forget_password.dart';
import 'sign_up.dart';

class SignIn extends StatefulWidget {
  const SignIn({super.key});
  @override
  State<SignIn> createState() => _SignInState();
}

class _SignInState extends State<SignIn> {
  bool homePassing = false;

  bool passHide = true;

  final emailController = TextEditingController();
  final passwordController = TextEditingController();

  @override
  void dispose() {
    super.dispose();
    emailController.dispose();
    passwordController.dispose();
  }

  GlobalKey<FormState> formkey = GlobalKey<FormState>();

  void validate() {
    if (formkey.currentState!.validate()) {
      print("sucess");
    }
  }

  // void login() {
  //   _auth
  //       .signInWithEmailAndPassword(
  //           email: emailController.text,
  //           password: passwordController.text.toString())
  //       .then((value) {
  //     Navigator.push(
  //         context, MaterialPageRoute(builder: (context) => DomainChecking()));
  //   }).onError((error, stackTrace) {
  //     ErrorShow().toastMessage(error.toString());
  //   });
  // }

  Future signInOperation() async {
    if (emailController.text == "" || passwordController.text == "") {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text("E M P T Y   F I E L D"),
        ),
      );
    } else {
      try {
        await FirebaseAuth.instance.signInWithEmailAndPassword(
          email: emailController.text.trim(),
          password: passwordController.text.trim(),
        );

        // final storageRef = FirebaseStorage.instance.ref();
        // final imageUrl = await storageRef.child(emailAllTime).getDownloadURL();
        // img = NetworkImage(imageUrl);
        homePassing = true;
      } on FirebaseAuthException catch (e) {
        late String str;
        if (e.toString().contains('password')) {
          str = "I N V A L I D    P A S S W O R D";
        } else {
          str = "I N V A L I D    E M A I L";
        }
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text(str),
          ),
        );
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    var widthX = MediaQuery.of(context).size.width;
    var heightX = MediaQuery.of(context).size.height;
    return Scaffold(
      //backgroundColor: Color.fromARGB(150, 244, 67, 0),
      body: Container(
        width: double.infinity,
        height: double.infinity,

        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [
              Color.fromARGB(255, 23, 54, 94),
              Color.fromARGB(255, 3, 29, 29),
            ],
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
          ),
        ),

        // decoration: BoxDecoration(
        //     color: Colors.transparent,
        //     image: DecorationImage(
        //         colorFilter: ColorFilter.mode(
        //             Colors.black.withOpacity(0.8), BlendMode.dstATop),
        //         image: NetworkImage(
        //             'https://tasbihdigital.com/wp-content/uploads/2022/06/Mobile-Wallpaper-Blue.jpg'), //AssetImage('assets/signin_bg.jpg'),
        //         fit: BoxFit.fill)),
        child: SafeArea(
          //   child: Center(
          child: SingleChildScrollView(
            physics: const BouncingScrollPhysics(
                parent: AlwaysScrollableScrollPhysics()),
            child: Padding(
              padding: EdgeInsets.only(
                left: widthX * 0.01,
                right: widthX * 0.01,
              ),
              child: Form(
                //autovalidateMode: true,
                key: formkey,
                child: Column(
                  // mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    SizedBox(
                      height: heightX * 0.160,
                      //height: 160
                    ),

                    //Sign in Text
                    Container(
                      // padding: EdgeInsets.only(top: height * 0.25),
                      child: const Center(
                        child: Text("Sign in",
                            textAlign: TextAlign.center,
                            style: TextStyle(
                                fontSize: 60,
                                fontStyle: FontStyle.italic,
                                color: Color.fromARGB(255, 255, 221, 71),
                                //  color: Color.fromARGB(255, 58, 7, 83),
                                fontWeight: FontWeight.bold,
                                fontFamily: 'KaushanScript')),
                      ),
                    ),

                    //Email textfield
                    SizedBox(
                      // height: 25
                      height: heightX * 0.025,
                    ),
                    SizedBox(
                      width: widthX * 0.9,
                      child: TextFormField(
                        controller: emailController,
                        style: const TextStyle(
                          fontFamily: 'Itim-Regular',
                          fontSize: 18,
                        ),
                        decoration: InputDecoration(
                          filled: true,
                          fillColor: Colors.grey[100],
                          prefixIcon: const Icon(
                            Icons.email,
                            color: Colors.grey,
                          ),
                          hintText: "Email",
                          border: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(30),
                              borderSide: const BorderSide(
                                color: Colors.black,
                                //width: 2.5,
                              )),
                          focusedBorder: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(30),
                              borderSide: const BorderSide(
                                color: Colors.yellow,
                                width: 2.5,
                              )),
                          enabledBorder: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(30),
                              borderSide: const BorderSide(
                                color: Colors.black,
                                //   width: 1.5,
                              )),
                        ),
                        validator: (val) {
                          if (val!.isEmpty) {
                            return "Email Needed";
                          } else {
                            return null;
                          }
                        },
                      ),
                    ),
                    SizedBox(height: heightX * 0.030),

                    //password textfield
                    SizedBox(
                      width: widthX * 0.9,
                      child: TextFormField(
                        obscureText: passHide,
                        controller: passwordController,
                        style: const TextStyle(
                          fontFamily: 'Itim-Regular',
                          fontSize: 18,
                        ),
                        decoration: InputDecoration(
                          filled: true,
                          fillColor: Colors.grey[100],
                          prefixIcon: const Icon(
                            Icons.lock,
                            color: Colors.grey,
                          ),
                          suffixIcon: IconButton(
                              onPressed: () {
                                setState(() {
                                  passHide = !passHide;
                                });
                              },
                              icon: Icon(
                                passHide
                                    ? Icons.visibility_off
                                    : Icons.visibility,
                                color: Colors.black54,
                              )),
                          hintText: "Password",
                          border: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(30),
                              borderSide: const BorderSide(
                                color: Colors.black,
                                //width: 2.5,
                              )),
                          focusedBorder: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(30),
                              borderSide: const BorderSide(
                                color: Colors.yellow,
                                width: 2.5,
                              )),
                          enabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(30),
                            borderSide: const BorderSide(
                              color: Colors.black,
                              // width: 1.5,
                            ),
                          ),
                        ),
                        validator: (val) {
                          if (val!.isEmpty) {
                            return "Password Needed";
                          } else {
                            return null;
                          }
                        },
                      ),
                    ),

                    SizedBox(height: heightX * 0.030),

                    //forget password
                    InkWell(
                      onTap: () {
                        Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (context) => const ForgetPassword()));
                      },
                      child: const Center(
                        child: Text("Forget Password?",
                            // textAlign: TextAlign.left,
                            style: TextStyle(
                              fontSize: 14,
                              fontStyle: FontStyle.normal,
                              color: Color.fromARGB(255, 255, 234, 177),
                              fontWeight: FontWeight.bold,
                            )),
                      ),
                    ),

                    SizedBox(height: heightX * 0.015),

                    const Padding(
                      padding: EdgeInsets.symmetric(horizontal: 20),
                      child: TermsAndPolicy(),
                    ),

                    SizedBox(height: heightX * 0.015),

                    //sign in button

                    Container(
                      child: SizedBox(
                        width: widthX * 0.9,
                        height: 50,
                        child: ElevatedButton(
                          onPressed: () {
                            signInOperation();
                            if (homePassing) {
                              Navigator.pop(context);
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                  builder: (context) => const ScanURL(),
                                ),
                              );
                            }
                          },
                          //validate,
                          child: const Text('Sign in'),
                          style: ElevatedButton.styleFrom(
                            textStyle: const TextStyle(
                              fontWeight: FontWeight.bold,
                              fontSize: 20,
                            ),
                            backgroundColor:
                                const Color.fromARGB(255, 250, 252, 134),
                            foregroundColor:
                                const Color.fromARGB(255, 54, 47, 47),
                            shape: const RoundedRectangleBorder(
                                borderRadius:
                                    BorderRadius.all(Radius.circular(15))),
                          ),
                        ),
                      ),
                    ),

                    //to Sign up
                    SizedBox(height: heightX * 0.025),

                    RichText(
                      text: TextSpan(
                        text: 'Already have an account? ',
                        style: const TextStyle(
                            color: Color.fromARGB(255, 255, 237, 78),
                            fontWeight: FontWeight.w500,
                            fontSize: 20,
                            fontFamily: 'Itim-Regular'),
                        children: [
                          TextSpan(
                            text: 'Sign Up',
                            style: const TextStyle(
                                color: Color.fromARGB(255, 255, 237, 78),
                                fontWeight: FontWeight.w900,
                                fontSize: 20,
                                fontFamily: 'Itim-Regular'),
                            recognizer: TapGestureRecognizer()
                              ..onTap = () {
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => const SignUp(),
                                  ),
                                );
                              },
                          )
                        ],
                      ),
                    ),

                    SizedBox(height: heightX * 0.020),

                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        SizedBox(
                          width: widthX * 0.35,
                          child: const Divider(
                            color: Colors.grey,
                            thickness: 2,
                          ),
                        ),
                        Padding(
                          padding: EdgeInsets.only(
                              left: widthX * 0.02, right: widthX * 0.02),
                          child: const Text(
                            "O R",
                            style: TextStyle(
                                fontWeight: FontWeight.bold,
                                color: Colors.white),
                          ),
                        ),
                        SizedBox(
                          width: widthX * 0.35,
                          child: const Divider(
                            color: Colors.grey,
                            thickness: 2,
                          ),
                        ),
                      ],
                    ),

                    SizedBox(
                      height: heightX * 0.020,
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        //Google button
                        InkWell(
                          onTap: () {},
                          child: Container(
                            height: 50,
                            width: 50,
                            decoration: BoxDecoration(
                              image: const DecorationImage(
                                image: AssetImage('assets/images/G+.png'),
                                fit: BoxFit.cover,
                              ),
                              borderRadius: BorderRadius.circular(30),
                              boxShadow: const [
                                BoxShadow(
                                    color: Colors.black,
                                    // blurRadius: 0.5,
                                    offset: Offset(0.0, 5)),
                              ],
                            ),
                          ),
                        ),

                        Padding(
                          padding: const EdgeInsets.only(left: 20),
                          child: InkWell(
                            onTap: () {},
                            child: Container(
                              height: 50,
                              width: 50,
                              decoration: BoxDecoration(
                                image: const DecorationImage(
                                  image: AssetImage('assets/images/fb.png'),
                                  fit: BoxFit.cover,
                                ),
                                borderRadius: BorderRadius.circular(30),
                                boxShadow: const [
                                  BoxShadow(
                                      color: Colors.black,
                                      // blurRadius: 0.5,
                                      offset: Offset(0.0, 5)),
                                ],
                              ),
                            ),
                          ),
                        ),

                        Padding(
                          padding: const EdgeInsets.only(left: 20),
                          child: InkWell(
                            onTap: () {},
                            child: Container(
                              height: 50,
                              width: 50,
                              decoration: BoxDecoration(
                                image: const DecorationImage(
                                  image:
                                      AssetImage('assets/images/twitter.jpg'),
                                  fit: BoxFit.cover,
                                ),
                                borderRadius: BorderRadius.circular(30),
                                boxShadow: const [
                                  BoxShadow(
                                      color: Colors.black,
                                      // blurRadius: 0.5,
                                      offset: Offset(0.0, 5)),
                                ],
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 50),
                    const Text(
                      "© Team Wreck-On",
                      textAlign: TextAlign.center,
                      style: TextStyle(
                          fontWeight: FontWeight.bold,
                          fontSize: 15,
                          color: Colors.grey),
                    )
                  ],
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }
}
