import 'package:flutter/material.dart';
import '../Routes/routes.dart';

class LoginPage extends StatefulWidget {
  const LoginPage({Key? key}) : super(key: key);

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  /// bool type value declared for suffix icon of password field
  bool _isVisiblePass = false;

  /// FocusNode() of name and password field
  final _nameFocus = FocusNode();
  final _passwordFocus = FocusNode();

  /// all fields controller
  final TextEditingController _userNameController = TextEditingController();
  final TextEditingController _passController = TextEditingController();

  /// _key to validate
  final _key = GlobalKey<FormState>();

  /// navigate to home screen after login
  gotoHome(BuildContext context) {
    if (_key.currentState!.validate()) {
      Navigator.pushNamed(context, Routes.home);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('LoginPage'),
      ),
      body: SingleChildScrollView(
        child: Center(
          /// First Container
          /// Whole container where second and third container are kept
          child: Container(
            height: 800,
            width: 360,
            decoration: BoxDecoration(
              color: Colors.white,
              //border: Border.all(color:Colors.blue, width:2),
              borderRadius: const BorderRadius.all(const Radius.circular(45)),
            ),

            /// second container and third container column
            child: Column(
              children: [
                /// second container
                /// Image container
                Container(
                  height: 250,
                  width: 360,
                  decoration: BoxDecoration(
                    //color:Colors.blue,
                    shape: BoxShape.rectangle,
                    //border: Border.all(color:Colors.red, width:2),
                    borderRadius:
                        const BorderRadius.all(const Radius.circular(42)),
                    image: DecorationImage(
                        image: AssetImage('assets/images/login.png'),
                        fit: BoxFit.cover),
                  ),
                ),

                /// third Container
                /// Keep User Name field, password field, forgotten password field, sign up field
                Container(
                    height: 550.0,
                    width: 360.0,
                    alignment: Alignment.topCenter,
                    decoration: BoxDecoration(
                        color: Colors.white,
                        shape: BoxShape.rectangle,
                        //border: Border.all(color:Colors.red, width:2),
                        borderRadius:
                            const BorderRadius.all(const Radius.circular(40))),

                    /// stack field
                    /// Keep User Name field, password field, forgotten password field, sign up field
                    child: Stack(children: [
                      Padding(
                        padding: const EdgeInsets.all(20.0),
                        child: Form(
                            key: _key,

                            /// column for text and textformfield
                            child: Column(
                              children: [
                                Padding(
                                  padding: const EdgeInsets.all(16.0),
                                  child: Text(
                                    'Sign in',
                                    style: TextStyle(
                                        fontSize: 35,
                                        fontWeight: FontWeight.w900),
                                  ),
                                ),

                                SizedBox(
                                  height: 30,
                                ),

                                //Image.asset('assets/images/login.png',height : 100,),

                                ///User Name Field
                                TextFormField(
                                  controller: _userNameController,

                                  focusNode: _nameFocus,
                                  onEditingComplete: () =>
                                      FocusScope.of(context)
                                          .requestFocus(_passwordFocus),

                                  keyboardType: TextInputType.text,
                                  textInputAction: TextInputAction.next,

                                  decoration: InputDecoration(
                                    contentPadding: const EdgeInsets.symmetric(
                                        vertical: 20, horizontal: 20),
                                    prefixIcon: Icon(Icons.person),
                                    suffixIcon: IconButton(
                                      icon: Icon(Icons.clear),
                                      onPressed: () {
                                        _userNameController.clear();
                                      },
                                    ),
                                    enabledBorder: OutlineInputBorder(
                                      borderRadius: BorderRadius.circular(50),
                                      borderSide: BorderSide(
                                        color: Colors.grey,
                                      ),
                                    ),
                                    focusedBorder: OutlineInputBorder(
                                      borderRadius: BorderRadius.circular(50),
                                      borderSide: BorderSide(
                                        color: Colors.black,
                                      ),
                                    ),
                                    hintText: 'Enter User Name : ',
                                    label: Text('UserName'),
                                  ),

                                  /// username field
                                  validator: (value) {
                                    if (value!.isEmpty) {
                                      return 'user Name cannot empty';
                                    }
                                    return null;
                                  },
                                ),

                                SizedBox(
                                  height: 20,
                                ),

                                /// Password Field
                                TextFormField(
                                  controller: _passController,

                                  focusNode: _passwordFocus,

                                  obscureText: true,

                                  keyboardType: TextInputType.text,
                                  textInputAction: TextInputAction.done,

                                  decoration: InputDecoration(
                                    contentPadding: const EdgeInsets.symmetric(
                                        vertical: 20, horizontal: 20),
                                    prefixIcon: Icon(Icons.lock),
                                    suffixIcon: IconButton(
                                      onPressed: () {
                                        setState(() {
                                          _isVisiblePass = !_isVisiblePass;
                                        });
                                      },
                                      icon: _isVisiblePass
                                          ? Icon(
                                              Icons.visibility,
                                              color: Colors.black,
                                            )
                                          : Icon(
                                              Icons.visibility_off,
                                              color: Colors.grey,
                                            ),
                                    ),
                                    enabledBorder: OutlineInputBorder(
                                      borderRadius: BorderRadius.circular(50),
                                      borderSide: BorderSide(
                                        color: Colors.grey,
                                      ),
                                    ),
                                    focusedBorder: OutlineInputBorder(
                                      borderRadius: BorderRadius.circular(50),
                                      borderSide: BorderSide(
                                        color: Colors.black,
                                      ),
                                    ),
                                    hintText: 'Enter Password : ',
                                    label: Text('password'),
                                  ),

                                  /// password validator
                                  validator: (value) {
                                    if (value!.isEmpty) {
                                      return 'Password can not be empty';
                                    } else if (value.length < 6) {
                                      return 'Password must have at least 6 characters';
                                    }
                                    return null;
                                  },
                                ),

                                SizedBox(
                                  height: 10,
                                ),

                                /// Forgotten Password Field
                                Text(
                                  'Forgott password?',
                                  textAlign: TextAlign.left,
                                  style: TextStyle(
                                      decoration: TextDecoration.underline,
                                      fontSize: 10,
                                      fontStyle: FontStyle.italic,
                                      fontWeight: FontWeight.w900),
                                ),

                                SizedBox(
                                  height: 30,
                                ),

                                /// Login Button
                                ElevatedButton(
                                    style: ElevatedButton.styleFrom(
                                        fixedSize: Size(150, 50),
                                        shape: RoundedRectangleBorder(
                                          borderRadius:
                                              BorderRadius.circular(50),
                                        )),
                                    onPressed: () {
                                      //Navigator.pushNamed(context, Routes.home); ///Moved to "goto" method
                                      gotoHome(context);
                                    },
                                    child: Text(
                                      'Login',
                                      textScaleFactor: 1.5,
                                    )),

                                SizedBox(
                                  height: 25,
                                ),

                                /// "Haven't any account? Sign Up" text form field
                                TextButton(
                                  onPressed: () {
                                    Navigator.pushNamed(context, 'register');
                                  },
                                  child: Text(
                                    "Haven't any account? Sign Up",
                                    textAlign: TextAlign.left,
                                    style: TextStyle(
                                      // decoration: TextDecoration.underline,
                                      color: Colors.black,
                                      fontSize: 15,
                                      fontStyle: FontStyle.italic,
                                    ),
                                  ),
                                  style: ButtonStyle(),
                                ),
                              ],
                            )),
                      ),
                    ]))
              ],
            ),
          ),
        ),
      ),
    );
  }
}
